{"remainingRequest":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js","dependencies":[{"path":"/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js","mtime":1547229081622},{"path":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DefaultBtn, Icon, Text } from './styles';\n/**\n * Component to trigger an operation.\n *\n * @param {*} { children, textStyle, icon, iconStyle, htmlType, type, ...props }\n * @returns {Component}\n */\n\nvar Button = function Button(_ref) {\n  var children = _ref.children,\n      textStyle = _ref.textStyle,\n      icon = _ref.icon,\n      htmlType = _ref.htmlType,\n      type = _ref.type,\n      props = _objectWithoutProperties(_ref, [\"children\", \"textStyle\", \"icon\", \"htmlType\", \"type\"]);\n\n  return React.createElement(DefaultBtn, Object.assign({\n    type: htmlType,\n    colorType: type\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), icon && React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, icon), React.createElement(Text, {\n    style: textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, children));\n};\n\nButton.propTypes = {\n  /** text of button */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** set the class of button */\n  className: PropTypes.string,\n\n  /** disabled state of the button */\n  disabled: PropTypes.bool,\n\n  /** redirect url of link button */\n  href: PropTypes.string,\n\n  /** HTML type of button */\n  htmlType: PropTypes.oneOf(['button', 'reset', 'submit']),\n\n  /** set the icon of button */\n  icon: PropTypes.string,\n\n  /** set the loading status of button */\n  loading: PropTypes.bool,\n\n  /** set the handler of click event */\n  onClick: PropTypes.func,\n\n  /** make background transparent and invert text and border colors */\n  outlined: PropTypes.bool,\n\n  /** make button circular */\n  rounded: PropTypes.bool,\n\n  /** size of the button */\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n\n  /** fit button width to its parent width */\n  stretched: PropTypes.bool,\n\n  /** set the style of button */\n  style: PropTypes.object,\n\n  /** same as target attr of a but works only when href is specified */\n  target: PropTypes.string,\n\n  /** set the style of text */\n  textStyle: PropTypes.object,\n\n  /** set the pattern of button */\n  type: PropTypes.oneOf(['default', 'primary'])\n};\nButton.defaultProps = {\n  disabled: false,\n  htmlType: 'button',\n  loading: false,\n  outlined: false,\n  rounded: false,\n  size: 'default',\n  stretched: false,\n  type: 'default'\n};\nvar _default = Button;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js\");\n  leaveModule(module);\n})();\n\n;\nButton.__docgenInfo = {\n  \"description\": \"Component to trigger an operation.\\n\\n@param {*} { children, textStyle, icon, iconStyle, htmlType, type, ...props }\\n@returns {Component}\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"disabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"disabled state of the button\"\n    },\n    \"htmlType\": {\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'button'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'reset'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'submit'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"HTML type of button\"\n    },\n    \"loading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"set the loading status of button\"\n    },\n    \"outlined\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"make background transparent and invert text and border colors\"\n    },\n    \"rounded\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"make button circular\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'default'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"size of the button\"\n    },\n    \"stretched\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"fit button width to its parent width\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'default'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'primary'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"set the pattern of button\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"text of button\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"set the class of button\"\n    },\n    \"href\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"redirect url of link button\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"set the icon of button\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"set the handler of click event\"\n    },\n    \"style\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"set the style of button\"\n    },\n    \"target\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"same as target attr of a but works only when href is specified\"\n    },\n    \"textStyle\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"set the style of text\"\n    }\n  }\n};",{"version":3,"sources":["/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js"],"names":["React","PropTypes","DefaultBtn","Icon","Text","Button","children","textStyle","icon","htmlType","type","props","propTypes","oneOfType","string","node","className","disabled","bool","href","oneOf","loading","onClick","func","outlined","rounded","size","stretched","style","object","target","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,QAAuC,UAAvC;AAEA;;;;;;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,SAAb,QAAaA,SAAb;AAAA,MAAwBC,IAAxB,QAAwBA,IAAxB;AAAA,MAA8BC,QAA9B,QAA8BA,QAA9B;AAAA,MAAwCC,IAAxC,QAAwCA,IAAxC;AAAA,MAAiDC,KAAjD;;AAAA,SACb,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,QAAlB;AAA4B,IAAA,SAAS,EAAEC;AAAvC,KAAiDC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGH,IAAI,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAP,CADX,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,QAAzB,CAFF,CADa;AAAA,CAAf;;AAOAD,MAAM,CAACO,SAAP,GAAmB;AACjB;AACAN,EAAAA,QAAQ,EAAEL,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,MAAX,EAAmBb,SAAS,CAACc,IAA7B,CAApB,CAFO;;AAGjB;AACAC,EAAAA,SAAS,EAAEf,SAAS,CAACa,MAJJ;;AAKjB;AACAG,EAAAA,QAAQ,EAAEhB,SAAS,CAACiB,IANH;;AAOjB;AACAC,EAAAA,IAAI,EAAElB,SAAS,CAACa,MARC;;AASjB;AACAL,EAAAA,QAAQ,EAAER,SAAS,CAACmB,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAAhB,CAVO;;AAWjB;AACAZ,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAZC;;AAajB;AACAO,EAAAA,OAAO,EAAEpB,SAAS,CAACiB,IAdF;;AAejB;AACAI,EAAAA,OAAO,EAAErB,SAAS,CAACsB,IAhBF;;AAiBjB;AACAC,EAAAA,QAAQ,EAAEvB,SAAS,CAACiB,IAlBH;;AAmBjB;AACAO,EAAAA,OAAO,EAAExB,SAAS,CAACiB,IApBF;;AAqBjB;AACAQ,EAAAA,IAAI,EAAEzB,SAAS,CAACmB,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,CAAhB,CAtBW;;AAuBjB;AACAO,EAAAA,SAAS,EAAE1B,SAAS,CAACiB,IAxBJ;;AAyBjB;AACAU,EAAAA,KAAK,EAAE3B,SAAS,CAAC4B,MA1BA;;AA2BjB;AACAC,EAAAA,MAAM,EAAE7B,SAAS,CAACa,MA5BD;;AA6BjB;AACAP,EAAAA,SAAS,EAAEN,SAAS,CAAC4B,MA9BJ;;AA+BjB;AACAnB,EAAAA,IAAI,EAAET,SAAS,CAACmB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB;AAhCW,CAAnB;AAmCAf,MAAM,CAAC0B,YAAP,GAAsB;AACpBd,EAAAA,QAAQ,EAAE,KADU;AAEpBR,EAAAA,QAAQ,EAAE,QAFU;AAGpBY,EAAAA,OAAO,EAAE,KAHW;AAIpBG,EAAAA,QAAQ,EAAE,KAJU;AAKpBC,EAAAA,OAAO,EAAE,KALW;AAMpBC,EAAAA,IAAI,EAAE,SANc;AAOpBC,EAAAA,SAAS,EAAE,KAPS;AAQpBjB,EAAAA,IAAI,EAAE;AARc,CAAtB;eAWeL,M;AAAf;;;;;;;;;;;;0BArDMA,M","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DefaultBtn, Icon, Text } from './styles'\n\n/**\n * Component to trigger an operation.\n *\n * @param {*} { children, textStyle, icon, iconStyle, htmlType, type, ...props }\n * @returns {Component}\n */\nconst Button = ({ children, textStyle, icon, htmlType, type, ...props }) => (\n  <DefaultBtn type={htmlType} colorType={type} {...props}>\n    {icon && <Icon>{icon}</Icon>}\n    <Text style={textStyle}>{children}</Text>\n  </DefaultBtn>\n)\n\nButton.propTypes = {\n  /** text of button */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** set the class of button */\n  className: PropTypes.string,\n  /** disabled state of the button */\n  disabled: PropTypes.bool,\n  /** redirect url of link button */\n  href: PropTypes.string,\n  /** HTML type of button */\n  htmlType: PropTypes.oneOf(['button', 'reset', 'submit']),\n  /** set the icon of button */\n  icon: PropTypes.string,\n  /** set the loading status of button */\n  loading: PropTypes.bool,\n  /** set the handler of click event */\n  onClick: PropTypes.func,\n  /** make background transparent and invert text and border colors */\n  outlined: PropTypes.bool,\n  /** make button circular */\n  rounded: PropTypes.bool,\n  /** size of the button */\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n  /** fit button width to its parent width */\n  stretched: PropTypes.bool,\n  /** set the style of button */\n  style: PropTypes.object,\n  /** same as target attr of a but works only when href is specified */\n  target: PropTypes.string,\n  /** set the style of text */\n  textStyle: PropTypes.object,\n  /** set the pattern of button */\n  type: PropTypes.oneOf(['default', 'primary'])\n}\n\nButton.defaultProps = {\n  disabled: false,\n  htmlType: 'button',\n  loading: false,\n  outlined: false,\n  rounded: false,\n  size: 'default',\n  stretched: false,\n  type: 'default'\n}\n\nexport default Button\n"]}]}