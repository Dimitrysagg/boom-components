{"remainingRequest":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js","dependencies":[{"path":"/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js","mtime":1547155791989},{"path":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DefaultBtn, Icon, Text } from './styles';\n/**\n * Component to trigger an operation.\n *\n * @param {*} { className, children, textStyle, style, type, icon, iconStyle, disabled, onClick }\n * @returns {Component}\n */\n\nvar Button = function Button(_ref) {\n  var children = _ref.children,\n      textStyle = _ref.textStyle,\n      icon = _ref.icon,\n      iconStyle = _ref.iconStyle,\n      htmlType = _ref.htmlType,\n      type = _ref.type,\n      props = _objectWithoutProperties(_ref, [\"children\", \"textStyle\", \"icon\", \"iconStyle\", \"htmlType\", \"type\"]);\n\n  return React.createElement(DefaultBtn, Object.assign({\n    type: htmlType,\n    colorType: type\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), icon && React.createElement(Icon, {\n    style: iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, icon), React.createElement(Text, {\n    style: textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, children));\n};\n\nButton.propTypes = {\n  /** text of button */\n  children: PropTypes.string.isRequired,\n\n  /** set the class of button */\n  className: PropTypes.string,\n\n  /** disabled state of the button */\n  disabled: PropTypes.bool,\n\n  /** HTML type of button */\n  htmlType: PropTypes.oneOf(['button', 'reset', 'submit']),\n\n  /** set the icon of button */\n  icon: PropTypes.element,\n\n  /** set the style of icon */\n  iconStyle: PropTypes.object,\n\n  /** set the handler of click event */\n  onClick: PropTypes.func,\n\n  /** set the style of button */\n  style: PropTypes.object,\n\n  /** set the style of text */\n  textStyle: PropTypes.object,\n\n  /** set the pattern of button */\n  type: PropTypes.oneOf(['default', 'primary'])\n};\nButton.defaultProps = {\n  children: '',\n  disabled: false,\n  htmlType: 'button',\n  type: 'default'\n};\nvar _default = Button;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js\");\n  leaveModule(module);\n})();\n\n;\nButton.__docgenInfo = {\n  \"description\": \"Component to trigger an operation.\\n\\n@param {*} { className, children, textStyle, style, type, icon, iconStyle, disabled, onClick }\\n@returns {Component}\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"children\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"text of button\"\n    },\n    \"disabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"disabled state of the button\"\n    },\n    \"htmlType\": {\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'button'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'reset'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'submit'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"HTML type of button\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'default'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'primary'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"set the pattern of button\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"set the class of button\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"element\"\n      },\n      \"required\": false,\n      \"description\": \"set the icon of button\"\n    },\n    \"iconStyle\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"set the style of icon\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"set the handler of click event\"\n    },\n    \"style\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"set the style of button\"\n    },\n    \"textStyle\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"set the style of text\"\n    }\n  }\n};",{"version":3,"sources":["/Users/cesar/Workspace/Alboom/boom-components/src/components/general/button/Button.js"],"names":["React","PropTypes","DefaultBtn","Icon","Text","Button","children","textStyle","icon","iconStyle","htmlType","type","props","propTypes","string","isRequired","className","disabled","bool","oneOf","element","object","onClick","func","style","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,QAAuC,UAAvC;AAEA;;;;;;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,SAAb,QAAaA,SAAb;AAAA,MAAwBC,IAAxB,QAAwBA,IAAxB;AAAA,MAA8BC,SAA9B,QAA8BA,SAA9B;AAAA,MAAyCC,QAAzC,QAAyCA,QAAzC;AAAA,MAAmDC,IAAnD,QAAmDA,IAAnD;AAAA,MAA4DC,KAA5D;;AAAA,SACb,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,QAAlB;AAA4B,IAAA,SAAS,EAAEC;AAAvC,KAAiDC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,IAAI,IAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,IAAzB,CADX,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,QAAzB,CAFF,CADa;AAAA,CAAf;;AAOAD,MAAM,CAACQ,SAAP,GAAmB;AACjB;AACAP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,MAAV,CAAiBC,UAFV;;AAGjB;AACAC,EAAAA,SAAS,EAAEf,SAAS,CAACa,MAJJ;;AAKjB;AACAG,EAAAA,QAAQ,EAAEhB,SAAS,CAACiB,IANH;;AAOjB;AACAR,EAAAA,QAAQ,EAAET,SAAS,CAACkB,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAAhB,CARO;;AASjB;AACAX,EAAAA,IAAI,EAAEP,SAAS,CAACmB,OAVC;;AAWjB;AACAX,EAAAA,SAAS,EAAER,SAAS,CAACoB,MAZJ;;AAajB;AACAC,EAAAA,OAAO,EAAErB,SAAS,CAACsB,IAdF;;AAejB;AACAC,EAAAA,KAAK,EAAEvB,SAAS,CAACoB,MAhBA;;AAiBjB;AACAd,EAAAA,SAAS,EAAEN,SAAS,CAACoB,MAlBJ;;AAmBjB;AACAV,EAAAA,IAAI,EAAEV,SAAS,CAACkB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB;AApBW,CAAnB;AAuBAd,MAAM,CAACoB,YAAP,GAAsB;AACpBnB,EAAAA,QAAQ,EAAE,EADU;AAEpBW,EAAAA,QAAQ,EAAE,KAFU;AAGpBP,EAAAA,QAAQ,EAAE,QAHU;AAIpBC,EAAAA,IAAI,EAAE;AAJc,CAAtB;eAOeN,M;AAAf;;;;;;;;;;;;0BArCMA,M","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DefaultBtn, Icon, Text } from './styles'\n\n/**\n * Component to trigger an operation.\n *\n * @param {*} { className, children, textStyle, style, type, icon, iconStyle, disabled, onClick }\n * @returns {Component}\n */\nconst Button = ({ children, textStyle, icon, iconStyle, htmlType, type, ...props }) => (\n  <DefaultBtn type={htmlType} colorType={type} {...props}>\n    {icon && <Icon style={iconStyle}>{icon}</Icon>}\n    <Text style={textStyle}>{children}</Text>\n  </DefaultBtn>\n)\n\nButton.propTypes = {\n  /** text of button */\n  children: PropTypes.string.isRequired,\n  /** set the class of button */\n  className: PropTypes.string,\n  /** disabled state of the button */\n  disabled: PropTypes.bool,\n  /** HTML type of button */\n  htmlType: PropTypes.oneOf(['button', 'reset', 'submit']),\n  /** set the icon of button */\n  icon: PropTypes.element,\n  /** set the style of icon */\n  iconStyle: PropTypes.object,\n  /** set the handler of click event */\n  onClick: PropTypes.func,\n  /** set the style of button */\n  style: PropTypes.object,\n  /** set the style of text */\n  textStyle: PropTypes.object,\n  /** set the pattern of button */\n  type: PropTypes.oneOf(['default', 'primary'])\n}\n\nButton.defaultProps = {\n  children: '',\n  disabled: false,\n  htmlType: 'button',\n  type: 'default'\n}\n\nexport default Button\n"]}]}