{"remainingRequest":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/cesar/Workspace/Alboom/boom-components/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/cesar/Workspace/Alboom/boom-components/src/components/data-entry/input/Input.js","dependencies":[{"path":"/Users/cesar/Workspace/Alboom/boom-components/src/components/data-entry/input/Input.js","mtime":1547506824990},{"path":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cesar/Workspace/Alboom/boom-components/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/cesar/Workspace/Alboom/boom-components/src/components/data-entry/input/Input.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DefaultInput } from './styles';\n/**\n * Basic text field to get user input.\n *\n * @param {*} { size, ...props }\n * @returns {Component}\n */\n\nvar Input = function Input(_ref) {\n  var size = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"size\"]);\n\n  return React.createElement(DefaultInput, Object.assign({\n    size: size\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nInput.propTypes = {\n  /** label text or component displayed on the right side of the input */\n  addonAfter: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** label text or component displayed on the left side of the input */\n  addonBefore: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** whether input content can be removed with clear icon */\n  clearable: PropTypes.bool,\n\n  /** initial input content */\n  defaultValue: PropTypes.string,\n\n  /** disabled state of the input */\n  disabled: PropTypes.string,\n\n  /** callback when value changes */\n  onChange: PropTypes.func,\n\n  /** callback when enter key is pressed */\n  onPressEnter: PropTypes.func,\n\n  /** prefix icon inside input */\n  prefix: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** suffix icon inside input */\n  suffix: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** HTML type of input */\n  type: PropTypes.oneOf(['button', 'checkbox', 'color', 'date', 'datetime', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week']),\n\n  /** size of the input box */\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n\n  /** input content value */\n  value: PropTypes.string\n};\nInput.defaultProps = {\n  disabled: false,\n  size: 'default',\n  type: 'text'\n};\nvar _default = Input;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Input, \"Input\", \"/Users/cesar/Workspace/Alboom/boom-components/src/components/data-entry/input/Input.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/cesar/Workspace/Alboom/boom-components/src/components/data-entry/input/Input.js\");\n  leaveModule(module);\n})();\n\n;\nInput.__docgenInfo = {\n  \"description\": \"Basic text field to get user input.\\n\\n@param {*} { size, ...props }\\n@returns {Component}\",\n  \"methods\": [],\n  \"displayName\": \"Input\",\n  \"props\": {\n    \"disabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"disabled state of the input\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'default'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"size of the input box\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'text'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'button'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'checkbox'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'color'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'date'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'datetime'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'datetime-local'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'email'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'file'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'hidden'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'image'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'month'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'number'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'password'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'radio'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'range'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'reset'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'search'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'submit'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'tel'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'text'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'time'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'url'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'week'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"HTML type of input\"\n    },\n    \"addonAfter\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"label text or component displayed on the right side of the input\"\n    },\n    \"addonBefore\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"label text or component displayed on the left side of the input\"\n    },\n    \"clearable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"whether input content can be removed with clear icon\"\n    },\n    \"defaultValue\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"initial input content\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"callback when value changes\"\n    },\n    \"onPressEnter\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"callback when enter key is pressed\"\n    },\n    \"prefix\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"prefix icon inside input\"\n    },\n    \"suffix\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"suffix icon inside input\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"input content value\"\n    }\n  }\n};",{"version":3,"sources":["/Users/cesar/Workspace/Alboom/boom-components/src/components/data-entry/input/Input.js"],"names":["React","PropTypes","DefaultInput","Input","size","props","propTypes","addonAfter","oneOfType","string","node","addonBefore","clearable","bool","defaultValue","disabled","onChange","func","onPressEnter","prefix","suffix","type","oneOf","value","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,YAAT,QAA6B,UAA7B;AAEA;;;;;;;AAMA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAAYC,KAAZ;;AAAA,SAAwB,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAED;AAApB,KAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;AAAA,CAAd;;AAEAF,KAAK,CAACG,SAAN,GAAkB;AAChB;AACAC,EAAAA,UAAU,EAAEN,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,MAAX,EAAmBR,SAAS,CAACS,IAA7B,CAApB,CAFI;;AAGhB;AACAC,EAAAA,WAAW,EAAEV,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,MAAX,EAAmBR,SAAS,CAACS,IAA7B,CAApB,CAJG;;AAKhB;AACAE,EAAAA,SAAS,EAAEX,SAAS,CAACY,IANL;;AAOhB;AACAC,EAAAA,YAAY,EAAEb,SAAS,CAACQ,MARR;;AAShB;AACAM,EAAAA,QAAQ,EAAEd,SAAS,CAACQ,MAVJ;;AAWhB;AACAO,EAAAA,QAAQ,EAAEf,SAAS,CAACgB,IAZJ;;AAahB;AACAC,EAAAA,YAAY,EAAEjB,SAAS,CAACgB,IAdR;;AAehB;AACAE,EAAAA,MAAM,EAAElB,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,MAAX,EAAmBR,SAAS,CAACS,IAA7B,CAApB,CAhBQ;;AAiBhB;AACAU,EAAAA,MAAM,EAAEnB,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,MAAX,EAAmBR,SAAS,CAACS,IAA7B,CAApB,CAlBQ;;AAmBhB;AACAW,EAAAA,IAAI,EAAEpB,SAAS,CAACqB,KAAV,CAAgB,CACpB,QADoB,EAEpB,UAFoB,EAGpB,OAHoB,EAIpB,MAJoB,EAKpB,UALoB,EAMpB,gBANoB,EAOpB,OAPoB,EAQpB,MARoB,EASpB,QAToB,EAUpB,OAVoB,EAWpB,OAXoB,EAYpB,QAZoB,EAapB,UAboB,EAcpB,OAdoB,EAepB,OAfoB,EAgBpB,OAhBoB,EAiBpB,QAjBoB,EAkBpB,QAlBoB,EAmBpB,KAnBoB,EAoBpB,MApBoB,EAqBpB,MArBoB,EAsBpB,KAtBoB,EAuBpB,MAvBoB,CAAhB,CApBU;;AA6ChB;AACAlB,EAAAA,IAAI,EAAEH,SAAS,CAACqB,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,CAAhB,CA9CU;;AA+ChB;AACAC,EAAAA,KAAK,EAAEtB,SAAS,CAACQ;AAhDD,CAAlB;AAmDAN,KAAK,CAACqB,YAAN,GAAqB;AACnBT,EAAAA,QAAQ,EAAE,KADS;AAEnBX,EAAAA,IAAI,EAAE,SAFa;AAGnBiB,EAAAA,IAAI,EAAE;AAHa,CAArB;eAMelB,K;AAAf;;;;;;;;;;;;0BA3DMA,K","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DefaultInput } from './styles'\n\n/**\n * Basic text field to get user input.\n *\n * @param {*} { size, ...props }\n * @returns {Component}\n */\nconst Input = ({ size, ...props }) => <DefaultInput size={size} {...props} />\n\nInput.propTypes = {\n  /** label text or component displayed on the right side of the input */\n  addonAfter: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** label text or component displayed on the left side of the input */\n  addonBefore: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** whether input content can be removed with clear icon */\n  clearable: PropTypes.bool,\n  /** initial input content */\n  defaultValue: PropTypes.string,\n  /** disabled state of the input */\n  disabled: PropTypes.string,\n  /** callback when value changes */\n  onChange: PropTypes.func,\n  /** callback when enter key is pressed */\n  onPressEnter: PropTypes.func,\n  /** prefix icon inside input */\n  prefix: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** suffix icon inside input */\n  suffix: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  /** HTML type of input */\n  type: PropTypes.oneOf([\n    'button',\n    'checkbox',\n    'color',\n    'date',\n    'datetime',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week'\n  ]),\n  /** size of the input box */\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n  /** input content value */\n  value: PropTypes.string\n}\n\nInput.defaultProps = {\n  disabled: false,\n  size: 'default',\n  type: 'text'\n}\n\nexport default Input\n"]}]}